Quantum-Cryptography|Different implementations of quantum cryptography algorithms|mentesniker|3|3|Jupyter Notebook|https://github.com/mentesniker/Quantum-Cryptography|1.0|Apache License 2.0
QuantumAlgorithms|Implementations of Quantum Algorithms|Axect|5|5|Jupyter Notebook|https://github.com/Axect/QuantumAlgorithms|1.0|NO LICENSE
Qauntum-trading-a-disturbance-in-the-force-of-supply-and-demand|Quantum algorithms for strategic interactions in Qiskit|DarkStarQuantumLab|2|2|Jupyter Notebook|https://github.com/DarkStarQuantumLab/Qauntum-trading-a-disturbance-in-the-force-of-supply-and-demand|1.0|Apache License 2.0
Quantum_Algorithm_Implementations|Contains code, descriptions of quantum algorithms in Qiskit, Q# and Cirq|GabrielPontolillo|3|3|Jupyter Notebook|https://github.com/GabrielPontolillo/Quantum_Algorithm_Implementations|1.0|MIT License
stock-picking|Creating Variational Quantum Algorithm from scratch to find optimal portfolios|rochisha0|4|4|Jupyter Notebook|https://github.com/rochisha0/stock-picking|1.0|NO LICENSE
quant-algos|Implementation of standard quantum algorithms using the IBM QISKit APIs|vimarsh6739|2|2|Python|https://github.com/vimarsh6739/quant-algos|1.0|MIT License
Quantum-Finance-Algorithms|Quantum algorithms for Portfolio Management.|duartefrazao|2|2|Python|https://github.com/duartefrazao/Quantum-Finance-Algorithms|1.0|NO LICENSE
Extended-basis-encoding-and-amplitude-encoding-algorithms-for-Qiskit|These are implementations of basis encoding and amplitude encoding in using Qiskit. |TuomasLe|2|2|Jupyter Notebook|https://github.com/TuomasLe/Extended-basis-encoding-and-amplitude-encoding-algorithms-for-Qiskit|1.0|NO LICENSE
quantum_pokemon-fight|A quantum game and algorithm to fight in Pokemon.|mickahell|9|9|Jupyter Notebook|https://github.com/mickahell/quantum_pokemon-fight|1.0|NO LICENSE
QC_Tuts|Quantum computing tutorials containing an introduction to qiskit and its basic syntax as well as the fundamentals of quantum computing such as gates , circuits and quantum algorithms|ukzncqt|2|2|Jupyter Notebook|https://github.com/ukzncqt/QC_Tuts|1.0|NO LICENSE
QuantumAlgorithms_Qiskit|Quantum algorithm studies. Following the Qiskit textbook: https://qiskit.org/textbook/|maryrbarros2|0|0|Jupyter Notebook|https://github.com/maryrbarros2/QuantumAlgorithms_Qiskit|1.0|NO LICENSE
Generalized-Quantum-Fourier-Transform|Generalized Quantum Fourier Transform Algorithm implemented with Qiskit|Sinestro38|2|2|Jupyter Notebook|https://github.com/Sinestro38/Generalized-Quantum-Fourier-Transform|1.0|NO LICENSE
Quantum-Multi-collision-Problem|Implementation of quantum multi-collision algorithm on Qiskit.|ace314|2|2|Jupyter Notebook|https://github.com/ace314/Quantum-Multi-collision-Problem|1.0|MIT License
Quantum-Exploration|Quantum Algorithms in Qiskit|Ben-Foxman|0|0|Jupyter Notebook|https://github.com/Ben-Foxman/Quantum-Exploration|1.0|NO LICENSE
Qiskit-Algorithms|This repository is aimed at consolidating and sharing quantum algorithms all in one place for those coding in Qiskit|Mikhaela-Paige|0|0|Python|https://github.com/Mikhaela-Paige/Qiskit-Algorithms|1.0|NO LICENSE
mirror-gates|mirror-decomposition integrated routing for algorithm gate efficiency|Pitt-JonesLab|3|3|Jupyter Notebook|https://github.com/Pitt-JonesLab/mirror-gates|1.0|MIT License
grover-max-cut|Implementation of a new Quantum Oracle for solving the Max-Cut Problem with Grover Search Algorithm|msramalho|7|7|Jupyter Notebook|https://github.com/msramalho/grover-max-cut|1.0|NO LICENSE
quantum-algorithm-learning-and-implementation|A group of quantum machine learning algorithm are implemented with the Qiskit|liyaochong|3|3|Jupyter Notebook|https://github.com/liyaochong/quantum-algorithm-learning-and-implementation|1.0|NO LICENSE
psfam|Pauli partitioning algorithm for optimal partitioning of 4^m pauli strings. Includes qiskit integration for change of basis circuits.|Benjreggio|7|7|Python|https://github.com/Benjreggio/psfam|1.0|NO LICENSE
quantum-phase-estimation|Implementation of the Quantum phase estimation algorithm for 5 Qubits using Qiskit. We hope to be able to run it in IBMq5|hugosc|2|2|Jupyter Notebook|https://github.com/hugosc/quantum-phase-estimation|1.0|NO LICENSE
Qiskit-Programs----|Implementing quantum algorithms on qiskit|SumbulZK|0|0||https://github.com/SumbulZK/Qiskit-Programs----|1.0|NO LICENSE
summer-school-on-quantum-computing-software-for-near-term-quantum-devices-2020|‚öõÔ∏è ‚öóÔ∏è üë®‚Äçüè´ A project based in Quantum Physics/Mechanics, Quantum Information Science, Quantum Theory, Quantum Chemistry and Quantum Computing. This project was developed as part of the Summer School on Quantum Computing: Software for Near Term Quantum Devices 2020, realized by UIMP (Universidad Internacional Men√©ndez Pelayo), with the support of some staff from CSIC (Consejo Superior de Investigaciones Cient√≠ficas), IBM (most specifically, IBM Zurich Research Labs) and Quantum Flagship, among others, via Web Video Conferences, with Presentations, Practical Exercises and a Final Project about some topics, related to Quantum Information Science, Quantum Theory, Quantum Chemistry and Quantum Computing.|rubenandrebarreiro|13|13|Jupyter Notebook|https://github.com/rubenandrebarreiro/summer-school-on-quantum-computing-software-for-near-term-quantum-devices-2020|1.0|MIT License
QiskitPrx|"Practicing qiskit using article ""Introduction to Coding Quantum Algorithms: A Tutorial Series Using Qiskit"" by Koch, Wessing, Alsing"|kurtchahn|0|0|Jupyter Notebook|https://github.com/kurtchahn/QiskitPrx|1.0|NO LICENSE
qiskit-learning|Algorithms from qiskit tutorials and stuff|crabster|0|0|Python|https://github.com/crabster/qiskit-learning|1.0|NO LICENSE
Quantum-Algorithms-qiskit-|This repo contains the modules and assignments that I did as a part of workshop conducted by MnP club IIT Bombay.|yatharth0610|1|1|Jupyter Notebook|https://github.com/yatharth0610/Quantum-Algorithms-qiskit-|1.0|NO LICENSE
quantum-algorithms-qiskit|UCLA CS239 Quantum Programming|danieljaffe|0|0|Jupyter Notebook|https://github.com/danieljaffe/quantum-algorithms-qiskit|1.0|NO LICENSE
qiskit_kindergarten|basic quantum computing circuits and algorithms|bibscore|0|0|Jupyter Notebook|https://github.com/bibscore/qiskit_kindergarten|1.0|NO LICENSE
qiskit_quantum_algorithms||DuarteSerranoR|0|0|Jupyter Notebook|https://github.com/DuarteSerranoR/qiskit_quantum_algorithms|1.0|NO LICENSE
qiskit-quantum-algorithms|A collection of basic quantum algorithms implemented in the IBM Q Quantum Information Science Kit (Qiskit), a Python quantum computing framework.|ikemmm|0|0|Python|https://github.com/ikemmm/qiskit-quantum-algorithms|1.0|MIT License
qiskit-algorithms-test||ElePT|0|0|Python|https://github.com/ElePT/qiskit-algorithms-test|1.0|NO LICENSE
quantum_algorithms_qiskit||orpgol|0|0|Python|https://github.com/orpgol/quantum_algorithms_qiskit|1.0|NO LICENSE
Qauntum_algorithms_Qiskit||vandnaChaturvedi|0|0|Jupyter Notebook|https://github.com/vandnaChaturvedi/Qauntum_algorithms_Qiskit|1.0|NO LICENSE
Qiskit-Quantum-Algo|Qiskit implementation of Quantum Algorithms|sohamch08|1|1|Jupyter Notebook|https://github.com/sohamch08/Qiskit-Quantum-Algo|1.0|NO LICENSE
Qiskit_Playground|Some basics quantum computing algorithms using qiskit|benkoehlL|0|0|Python|https://github.com/benkoehlL/Qiskit_Playground|1.0|NO LICENSE
quantum_computing|Learning Quantum Computing: starting from single qubit to advanced materials including Quantum Fourier Transform, Grover Algorithm, and many more.|quantumyatra|3|3|Jupyter Notebook|https://github.com/quantumyatra/quantum_computing|1.0|NO LICENSE
quantum-algorithms|Quantum algorithm test implementations using Qiskit|PKXH|0|0|Jupyter Notebook|https://github.com/PKXH/quantum-algorithms|1.0|NO LICENSE
QuantumAlgs|Quantum Algorithms Qiskit and Cirq|codigoscupom|0|0|Python|https://github.com/codigoscupom/QuantumAlgs|1.0|NO LICENSE
IBMQ-Quantum-Qiskit|Quatum Computiing Algorithms using IBMQ|Andres8bit|0|0|Jupyter Notebook|https://github.com/Andres8bit/IBMQ-Quantum-Qiskit|1.0|NO LICENSE
Qiskit_Algorithm|Basic Quantum Algorithms done using Qiskit library|AnshDabkara|0|0|Jupyter Notebook|https://github.com/AnshDabkara/Qiskit_Algorithm|1.0|NO LICENSE
qiskit-notebooks|Implementation of quantum algorithms and protocols in Qiskit.|SanNare|0|0|Jupyter Notebook|https://github.com/SanNare/qiskit-notebooks|1.0|NO LICENSE
quantum-project-using-qiskit|Deutschs_Algorithm , Shors_Algorithm , Grovers_Algorithm  and diagrams |aaghazaly|0|0|Python|https://github.com/aaghazaly/quantum-project-using-qiskit|1.0|MIT License
My-Qiskit-codes|Some Qiskit codes implementing quantum algorithms|mingweii|0|0|Jupyter Notebook|https://github.com/mingweii/My-Qiskit-codes|1.0|MIT License
qiskit_algorithm|Programming some algorithms of quantum computing using qiskit|Ilan-Bondarevsky|1|1|Jupyter Notebook|https://github.com/Ilan-Bondarevsky/qiskit_algorithm|1.0|NO LICENSE
Quantum-Algorithms-in-Qiskit|Deutsch Jozsa Algorithm, Bernstein Vazirani Algorithm, Grover's Algorithm, Simon's Algorithm |MetalKyubit|1|1|Jupyter Notebook|https://github.com/MetalKyubit/Quantum-Algorithms-in-Qiskit|1.0|NO LICENSE
QiskitGroverDinnerParty|Using Grover's algorithm to solve satisfiability problems...|soccertes123|0|0|Jupyter Notebook|https://github.com/soccertes123/QiskitGroverDinnerParty|1.0|NO LICENSE
qiskit_POCs|small repo for some quantum algorithms implemented in qiskit|mousepad01|0|0|Python|https://github.com/mousepad01/qiskit_POCs|1.0|NO LICENSE
Quantum_algorithms|Quantum algorithms and programs wrote using qiskit.|WerWojtas|0|0|Python|https://github.com/WerWojtas/Quantum_algorithms|1.0|NO LICENSE
Quantum-Algorithms-with-Qiskit||Fabiha-Noshin|0|0|Jupyter Notebook|https://github.com/Fabiha-Noshin/Quantum-Algorithms-with-Qiskit|1.0|MIT License
QuantumComputing-qiskit|Implementing qiskit to understand Quantum Computing algorithms|rainmaker29|0|0|Jupyter Notebook|https://github.com/rainmaker29/QuantumComputing-qiskit|1.0|NO LICENSE
Algorithms-|Simulating quantum algorithms primarly using IBM's QisKit platform.|riachakraborty|0|0|Python|https://github.com/riachakraborty/Algorithms-|1.0|NO LICENSE
QC-Algorithms-with-Qiskit|Implementation of quantum computing algorithms with Qiskit library.|samihatashin|0|0|Jupyter Notebook|https://github.com/samihatashin/QC-Algorithms-with-Qiskit|1.0|NO LICENSE
Quantum_algorithms_using_Qiskit|This repository contains a collection of code related to quantum circuit and quantum algorithms|PayalSolanki2906|0|0|Jupyter Notebook|https://github.com/PayalSolanki2906/Quantum_algorithms_using_Qiskit|1.0|NO LICENSE
Quantum_computation|quantum_algorithms_using_qiskit|aniket1905-del|0|0|Jupyter Notebook|https://github.com/aniket1905-del/Quantum_computation|1.0|NO LICENSE
quantum_teleportation|Quantum Teleportation Algorithm (Qiskit)|chinsu70802|0|0|Jupyter Notebook|https://github.com/chinsu70802/quantum_teleportation|1.0|NO LICENSE
Quantum_Algorithms_and_Qiskit|This is my personal undertake to implement quantum algorithms in my own ways. I have taken necessary inspiration from  Qiskit tutorials and other sources to improve on.|108mk|1|1|Jupyter Notebook|https://github.com/108mk/Quantum_Algorithms_and_Qiskit|1.0|MIT License
quantum_algorithms_in_qiskit||Raunak-Singh-Inventor|0|0|Jupyter Notebook|https://github.com/Raunak-Singh-Inventor/quantum_algorithms_in_qiskit|1.0|NO LICENSE
Four-Algorithms-in-Qiskit||PAYAL980|0|0|Jupyter Notebook|https://github.com/PAYAL980/Four-Algorithms-in-Qiskit|1.0|NO LICENSE
QC-with-qiskit|Quantum Computing Algorithms and some other Qiskit programs|deveshq|0|0|Jupyter Notebook|https://github.com/deveshq/QC-with-qiskit|1.0|NO LICENSE
HHL_implementation|HHL Algorithm using Qiskit|AllenGabrielMarchen|1|1|Jupyter Notebook|https://github.com/AllenGabrielMarchen/HHL_implementation|1.0|NO LICENSE
Quantum-Algorithm|Quantum Algorithm with Qiskit|klebermagno|1|1|Python|https://github.com/klebermagno/Quantum-Algorithm|1.0|NO LICENSE
qintro|Introduction to quantum algorithms with qiskit|dnnagy|0|0|Jupyter Notebook|https://github.com/dnnagy/qintro|1.0|NO LICENSE
Qiskit-Quantum-Journey|Algorithms and programs using Qiskit for Quantum Computers|AlphaMiyaL|0|0|Jupyter Notebook|https://github.com/AlphaMiyaL/Qiskit-Quantum-Journey|1.0|NO LICENSE
Beyond-Classical-a-quantum-computing-crash-course-using-qiskit|This repository will have all the algorithms which are in the book Beyond Classical a crash course on QUantum Computing using Qiskit and IBM Q|Rishwi|2|2|Jupyter Notebook|https://github.com/Rishwi/Beyond-Classical-a-quantum-computing-crash-course-using-qiskit|1.0|NO LICENSE
quantum_course|Qiskit with Grover, Deutsch-Jozsa algorithms|RyabovNick|0|0||https://github.com/RyabovNick/quantum_course|1.0|NO LICENSE
Basic-Quantum-Algorithms|Some basic quantum algorithms implemented using Qiskit|Soumyo2121|0|0|Jupyter Notebook|https://github.com/Soumyo2121/Basic-Quantum-Algorithms|1.0|NO LICENSE
Quantum-programming-algorithms|Some interesting quantum computing algorithms on qiskit.|Glebegor|1|1|Python|https://github.com/Glebegor/Quantum-programming-algorithms|1.0|MIT License
quantum_algorithms|Contains some quantum algorithms/programs, implemented using Qiskit|kafurakami|0|0|Jupyter Notebook|https://github.com/kafurakami/quantum_algorithms|1.0|NO LICENSE
quantum-computing-qiskit-|quantum algorithm implementations|ka-us-tubh|0|0|Jupyter Notebook|https://github.com/ka-us-tubh/quantum-computing-qiskit-|1.0|NO LICENSE
Qiskit_Tutorial|A short tutorial on Qiksit for the students in ICS 561 Quantum Algorithms |SultanMS|0|0|Jupyter Notebook|https://github.com/SultanMS/Qiskit_Tutorial|1.0|NO LICENSE
qiskit_testing|Testing qiskit( a way to write quantum algorithms and program ibm quantum computers)|akashktesla|0|0|Python|https://github.com/akashktesla/qiskit_testing|1.0|NO LICENSE
Quantum-Algos-using-Qiskit|Implementing a few common Quantum Algorithms using Qiskit|sarthag|0|0|Jupyter Notebook|https://github.com/sarthag/Quantum-Algos-using-Qiskit|1.0|NO LICENSE
Implementation-of-Algorithm-using-Qiskit|This project focuses on the implementation of four prominent quantum algorithms using Qiskit, a popular Python framework for quantum computing. The implemented algorithms include Grover's algorithm, Deutsch-Jozsa algorithm, Shor's algorithm, and Fourier's algorithm.|drithidavuluri|0|0|Python|https://github.com/drithidavuluri/Implementation-of-Algorithm-using-Qiskit|1.0|NO LICENSE
grover-qiskit|Grover's algorithm in Qiskit|mvicenzi|0|0|Jupyter Notebook|https://github.com/mvicenzi/grover-qiskit|1.0|NO LICENSE
qiskitsimon|Simple implementation of Simon algorithm using Quiskit|Guilty994|0|0||https://github.com/Guilty994/qiskitsimon|1.0|NO LICENSE
Hybrid-Quantum-Endowment-Portfolio-Optimization|A project making use of the Variational Quantum Eigensolver ( VQE ) and Quantum Approximate Optimization Algorithms ( QAOA ) in qiskit to optimize an endowment portfolio, with weights defined by risk-parity analysis..|anishrverma|2|2|Jupyter Notebook|https://github.com/anishrverma/Hybrid-Quantum-Endowment-Portfolio-Optimization|1.0|MIT License
Bernstein-Vazirani_Algorithm_function|A Bernstein-Varizan Algorithm function that finds hidden bitstrings with Qiskit|DarrenNA|2|2|Jupyter Notebook|https://github.com/DarrenNA/Bernstein-Vazirani_Algorithm_function|1.0|NO LICENSE
MaxCut-QAOA|A Quantum Approximation algorithm for finding the Max-Cut of directed weighted graphs. |Wasiq-Malik|3|3|Jupyter Notebook|https://github.com/Wasiq-Malik/MaxCut-QAOA|1.0|NO LICENSE
Quantum-Machinel-Leaning|Classification Algorithm using Circuit-Centric Quantum Classifiers with IBM qiskit library.|Javihaus|2|2|Jupyter Notebook|https://github.com/Javihaus/Quantum-Machinel-Leaning|1.0|MIT License
Quant_co_Qiskit|This repository consists of basic gate implementation , quantum computing algorithms in qiskit |JayantiSingh|0|0|Jupyter Notebook|https://github.com/JayantiSingh/Quant_co_Qiskit|1.0|NO LICENSE
qasm_py_quantum|Circuits and algorithms with qiskit and openqasm|adityakhannaadk|0|0|Python|https://github.com/adityakhannaadk/qasm_py_quantum|1.0|NO LICENSE
QuantumTeleportation|Quantum Teleportation algorithm - Qiskit implementation |GiacomoFrn|1|1|Jupyter Notebook|https://github.com/GiacomoFrn/QuantumTeleportation|1.0|NO LICENSE
QAOA-Qiskit|Implementation of QAOA algorithm with Qiskit|a-giovagnoli|0|0|Jupyter Notebook|https://github.com/a-giovagnoli/QAOA-Qiskit|1.0|NO LICENSE
QIT|Introductory quantum algorithms using the qiskit library|MAI-cyber|0|0|Jupyter Notebook|https://github.com/MAI-cyber/QIT|1.0|NO LICENSE
cs239|Quantum algorithms written in PyQuil and Qiskit|ritamsarmah|0|0|Python|https://github.com/ritamsarmah/cs239|1.0|NO LICENSE
SQTV2|Qiskit-like quantum algorithm tool|OliverSmedt|0|0|C++|https://github.com/OliverSmedt/SQTV2|1.0|The Unlicense
Quantum-Computations-and-Algorithms|Contains solutions to Quantum Algorithms exercises using Qiskit |a24l|0|0|Jupyter Notebook|https://github.com/a24l/Quantum-Computations-and-Algorithms|1.0|NO LICENSE
QiskitSG|Using the Grover search algorithm to identify instances of a fully connected spin glass that have no frustration. Qiskit practice.|adlantz|1|1|Python|https://github.com/adlantz/QiskitSG|1.0|NO LICENSE
Quantum-Computing-using-qiskit|sample code for quantum computing algorithms using qiskit (IBM-Q library)|ayazskhan|0|0||https://github.com/ayazskhan/Quantum-Computing-using-qiskit|1.0|NO LICENSE
Qiskit_Projects|The repository contains various projects that use the Qiskit toolkit to construct quantum computer circuits and algorithms.|wardahmad|0|0||https://github.com/wardahmad/Qiskit_Projects|1.0|NO LICENSE
Practical-Quantum-ESM|Implementation of a Quantum Exact String Matching Algorithm.|antonioscardace|4|4|Jupyter Notebook|https://github.com/antonioscardace/Practical-Quantum-ESM|1.0|MIT License
Qiskit-Teleportation|Quantum Teleportation algorithm with Basic of QC|AasthaShayla|1|1|Jupyter Notebook|https://github.com/AasthaShayla/Qiskit-Teleportation|1.0|NO LICENSE
final_paper_qiskit_sat|Use of quantum algorithms as an alternative to solve Boolean Satisfiability problems|rickapocalypse|0|0|Python|https://github.com/rickapocalypse/final_paper_qiskit_sat|1.0|NO LICENSE
clonk_transpilation|Developing a transpilation toolflow to study topologies using placement/routing algorithms|Pitt-JonesLab|1|1|Jupyter Notebook|https://github.com/Pitt-JonesLab/clonk_transpilation|1.0|MIT License
qft-qiskit|Building the Quantum Fourier Transform algorithm using Qiskit|annabsouza|0|0|Jupyter Notebook|https://github.com/annabsouza/qft-qiskit|1.0|MIT License
Qiskit_Textbook_Worstation|This is a repository of implementation of Qiskit textbook scripts and algorithms as well as exercises.|nunofernandes-plight|1|1|Jupyter Notebook|https://github.com/nunofernandes-plight/Qiskit_Textbook_Worstation|1.0|NO LICENSE
Qiskit_workshop1019|Introduction and first algorithm with qiskit|grossiM|1|1|Jupyter Notebook|https://github.com/grossiM/Qiskit_workshop1019|1.0|NO LICENSE
Learning-Qiskit|Learning quantum computation and quantum algorithm via Qiskit.|ichen17|0|0|Jupyter Notebook|https://github.com/ichen17/Learning-Qiskit|1.0|NO LICENSE
quantum_algorithms_and_protocols|Repository with implementations of various quantum algorithms in qiskit. |josejad42|0|0|Jupyter Notebook|https://github.com/josejad42/quantum_algorithms_and_protocols|1.0|NO LICENSE
RSA-breaker|A toy RSA breaker based on Shor's algorithm ft. IBM QISKIT|levchCode|2|2|Python|https://github.com/levchCode/RSA-breaker|1.0|NO LICENSE
QAlgoImplementation|A compilation of the quantum algorithms Qiskit Implementations|stevvwen|0|0|Jupyter Notebook|https://github.com/stevvwen/QAlgoImplementation|1.0|NO LICENSE
quantum-practice|A place for implementing quantum algorithms using Qiskit|henotrix|0|0|Python|https://github.com/henotrix/quantum-practice|1.0|MIT License
GroverAlgorithm_Qiskit|Grover's Algorithm with 2-Qubit Oracle|LohitPotnuru|1|1|Jupyter Notebook|https://github.com/LohitPotnuru/GroverAlgorithm_Qiskit|1.0|NO LICENSE
QuantumHelloWorld|Simulations of basic quantum computing algorithms with qiskit |pedrotelez|0|0|Jupyter Notebook|https://github.com/pedrotelez/QuantumHelloWorld|1.0|NO LICENSE
Qiskit-QML-course|This is an intro to QML algorithms what they are, and how to apply a few of them|Katie1harrison|0|0||https://github.com/Katie1harrison/Qiskit-QML-course|1.0|NO LICENSE
shor_algorithm|Shor's algorithm implementation in Qiskit|0xCAB0|0|0|Jupyter Notebook|https://github.com/0xCAB0/shor_algorithm|1.0|NO LICENSE
Grover-Search-Implementation|Grover Search Algorithm Implementation with Qiskit|samabwhite|0|0|Jupyter Notebook|https://github.com/samabwhite/Grover-Search-Implementation|1.0|NO LICENSE
Quantum-KNN-Classifier-using-Qiskit|Explore the frontier of quantum computing with our Quantum K-Nearest Neighbors (q-KNN) implementation, using IBM's Qiskit framework. This repository offers a unique quantum approach to the classic KNN algorithm, demonstrating potential speed-ups and efficiency gains in machine learning.|nagarx|2|2|Jupyter Notebook|https://github.com/nagarx/Quantum-KNN-Classifier-using-Qiskit|1.0|NO LICENSE
Grover-Algo|Grover's Algorithm implementation using QISKIT.|varunpalakodeti20|0|0|Jupyter Notebook|https://github.com/varunpalakodeti20/Grover-Algo|1.0|MIT License
Shors-Algorithm|Replicating Shor's algorithm using qiskit|Sinestro38|1|1|Jupyter Notebook|https://github.com/Sinestro38/Shors-Algorithm|1.0|NO LICENSE
Hamiltonian_Downfolding_IBM|Downfolding Hamiltonians by making them more sparse or using DUCC method. Qiskit algorithms to do VQE, ED or IQPE for Hamiltonian simulation.|mmetcalf14|3|3|Python|https://github.com/mmetcalf14/Hamiltonian_Downfolding_IBM|1.0|NO LICENSE
QISKIT_INDIA_CHALLENGE|Challenge by IBM on quantum machine learning algorithm|harshagarine|0|0|Python|https://github.com/harshagarine/QISKIT_INDIA_CHALLENGE|1.0|NO LICENSE
Quantum-Computing-Qiskit-Tutorial|This repository contains my attempt to implement some well known quantum circuits, quantum algorithms using Qiskit.|Aman-Agrawal01|0|0|Jupyter Notebook|https://github.com/Aman-Agrawal01/Quantum-Computing-Qiskit-Tutorial|1.0|NO LICENSE
shor-qiskit|An implementation of Shor's algorithm using Python and Qiskit|Victor1128|0|0|Jupyter Notebook|https://github.com/Victor1128/shor-qiskit|1.0|NO LICENSE
IBM_Qiskit_QGSS|IBM Quantum Global Summer School |a24l|0|0|Jupyter Notebook|https://github.com/a24l/IBM_Qiskit_QGSS|1.0|NO LICENSE
Deutsch-Jozsa|Deutsch-Jozsa algorithm implementation using Qiskit|barankiewicz|0|0|Jupyter Notebook|https://github.com/barankiewicz/Deutsch-Jozsa|1.0|NO LICENSE
qiskit-simulation|Qiskit Simulation is a library of quantum simulation algorithms based on Qiskit, suitable to run on near-term quantum devices with short-depth circuits.|declanmillar|0|0|Python|https://github.com/declanmillar/qiskit-simulation|1.0|Apache License 2.0
shor-algorithm-qiskit|Shor's Algorithm implementation using the Qiskit SDK|Herbrant|1|1|Python|https://github.com/Herbrant/shor-algorithm-qiskit|1.0|GNU General Public License v3.0
Qiskit-CKS-Algorithm|Implementation of Childs Kothari Somma Algorithm on Qiskit|OldGinko|0|0|Python|https://github.com/OldGinko/Qiskit-CKS-Algorithm|1.0|NO LICENSE
Shor-s-Algorithm-|Shor‚Äôs Algorithm implementation in Qiskit|shaurya010|0|0|Python|https://github.com/shaurya010/Shor-s-Algorithm-|1.0|NO LICENSE
quantum-shors-algorithm|Implementing Shor's Algorithm via Qiskit|mattalcasabas|0|0|Jupyter Notebook|https://github.com/mattalcasabas/quantum-shors-algorithm|1.0|NO LICENSE
Grover|Grover algorithm implemented using Qiskitüíø|usamisaori|0|0|Jupyter Notebook|https://github.com/usamisaori/Grover|1.0|NO LICENSE
qiskit-intro|Intro to the Quantum Approximate Optimization Algorithm (QAOA) using IBM Qiskit|westernquantumclub|0|0|Jupyter Notebook|https://github.com/westernquantumclub/qiskit-intro|1.0|NO LICENSE
qiskit-fast-shor|A faster implementation of Shor's algorithm in Qiskit.|CapacitorSet|0|0|Python|https://github.com/CapacitorSet/qiskit-fast-shor|1.0|NO LICENSE
QUEASARS|QUEASARS is an open-source, qiskit-based, python package implementing quantum variational eigensolvers which use evolutionary algorithms to find a good ansatz during the optimization process.|DLR-RB|4|4|Python|https://github.com/DLR-RB/QUEASARS|1.0|Apache License 2.0
QuantumTopologicalDataAnalysis|Implementation of a quantum algorithm to compute topological features of generic (high-dimensional) data clouds in Qiskit. |KathrinKoenig|3|3|Jupyter Notebook|https://github.com/KathrinKoenig/QuantumTopologicalDataAnalysis|1.0|NO LICENSE
The-Qiskit-Practical-Experiments.|An open-source SDK for working with quantum computers at the level of pulses, applications, circuits, and algorithms.|pylajitendra|1|1||https://github.com/pylajitendra/The-Qiskit-Practical-Experiments.|1.0|GNU General Public License v3.0
Quantum-Programs|A collection of few quantum algorithms in IBM Qiskit|AbeerVaishnav13|1|1|Jupyter Notebook|https://github.com/AbeerVaishnav13/Quantum-Programs|1.0|NO LICENSE
sat-circuits-engine|A Python-Qiskit-based package that provides capabilities of easily generating, executing and analyzing quantum circuits for satisfiability problems according to user-defined constraints. The circuits being generated by the program are based on Grover's algorithm and its amplitude-amplification generalization.|ohadlev77|7|7|HTML|https://github.com/ohadlev77/sat-circuits-engine|1.0|Apache License 2.0
qaoa-maxcut-qiskit|Quantum Approximative Optimization Algorithm with Bayesian optimizer to MAXCUT problem|agaviniv|0|0|Python|https://github.com/agaviniv/qaoa-maxcut-qiskit|1.0|NO LICENSE
qiskit-polynomial-program|An unfinished project whose goal was to introduce support for higher-order polynomials in Hamiltonians used for algorithms such as QAOA or VQE.|jplewa|0|0|Python|https://github.com/jplewa/qiskit-polynomial-program|1.0|MIT License
qiskit_factorization|Implement Shor's algorithm factorization in qiskit, including the modular exponent and QFT|thyung|1|1|Jupyter Notebook|https://github.com/thyung/qiskit_factorization|1.0|GNU General Public License v3.0
Bernstein-Vazirani-using-Qiskit|Implementation of the Bernstein-Vazirani algorithm using Qiskit.|debdeepmitra|0|0||https://github.com/debdeepmitra/Bernstein-Vazirani-using-Qiskit|1.0|NO LICENSE
Introduction-to-Quantum-Computing-Quantum-Algorithms-and-Qiskit|My assignments for the Introduction to Quantum Computing: Quantum Algorithms and Qiskit on nptel|shell-raiser|1|1|Jupyter Notebook|https://github.com/shell-raiser/Introduction-to-Quantum-Computing-Quantum-Algorithms-and-Qiskit|1.0|NO LICENSE
IBM-Qiskit-Models|Repository for all miscellaneous models created using Qiskit, an open-source framework for working with noisy quantum computers at the level of pulses, circuits, and algorithms.|rowanshah|0|0|Jupyter Notebook|https://github.com/rowanshah/IBM-Qiskit-Models|1.0|NO LICENSE
QAI_GroverSim|Grover Algorithm simulator using Qiskit >=1.0|Harcipan|0|0|Jupyter Notebook|https://github.com/Harcipan/QAI_GroverSim|1.0|NO LICENSE
Quantum_Computing_Fundamentals|Implementation of the quantum algorithm using Qiskit|purvi1508|0|0|Jupyter Notebook|https://github.com/purvi1508/Quantum_Computing_Fundamentals|1.0|NO LICENSE
qiskit-fourier-check|My first try with a quantum algorithm - Running a Fourier Check|bernardomendonca|0|0|Jupyter Notebook|https://github.com/bernardomendonca/qiskit-fourier-check|1.0|NO LICENSE
Grover-s-Algorithm|Python Qiskit Program implementing Grover's Algorithm.|INFINIT27|0|0|Jupyter Notebook|https://github.com/INFINIT27/Grover-s-Algorithm|1.0|NO LICENSE
QiskitHackaton2021|We propose a quantum circuit to estimate the expected value of a density matrix, and we use this circuit to implement a supervised learning algorithm. First place in the IBM Qiskit Fall Fest Hackaton 2021, Colombian Universities.|diegour1|1|1|Jupyter Notebook|https://github.com/diegour1/QiskitHackaton2021|1.0|MIT License
shors-algorithm|Implementation of Shor's algorithm using Qiskit|SamScherf|0|0|Python|https://github.com/SamScherf/shors-algorithm|1.0|NO LICENSE
VQAA|Qiskit simulation of VQAA algorithm for report|yellowskydragon|0|0|Python|https://github.com/yellowskydragon/VQAA|1.0|NO LICENSE
Bernstein_Vazirani_Algorithm|Bernstein-Vazirani Algorithm in python using qiskit|sakthianand7|0|0|Jupyter Notebook|https://github.com/sakthianand7/Bernstein_Vazirani_Algorithm|1.0|NO LICENSE
QML|Quantum Machine Learning Algorithm repository by Qiskit|koptimizer|0|0||https://github.com/koptimizer/QML|1.0|MIT License
deutsch-jozsa-algorithm|Implementation of Deutsch-Jozsa Algorithm using Qiskit.|calm-cookie|0|0|Jupyter Notebook|https://github.com/calm-cookie/deutsch-jozsa-algorithm|1.0|MIT License
maxima_function_qiskit|Quantum algorithm to get the maxima of a one bit binary function.|icarosadero|0|0|Jupyter Notebook|https://github.com/icarosadero/maxima_function_qiskit|1.0|NO LICENSE
Deutsch-Joza-Algorithm|Qiskit implementation for the Deutsch-Jozsa algorithm.|RakhshandaMujib|1|1|Jupyter Notebook|https://github.com/RakhshandaMujib/Deutsch-Joza-Algorithm|1.0|NO LICENSE
Quantum-Counting|Qiskit Implementation of the Quantum Counting Algorithm|MarvOdo|0|0|Python|https://github.com/MarvOdo/Quantum-Counting|1.0|MIT License
QuantumComputingAlgos|Quantum Computing Algorithms implemented using qiskit library and jupyter notebooks|intrinsicvardhan|0|0|Jupyter Notebook|https://github.com/intrinsicvardhan/QuantumComputingAlgos|1.0|NO LICENSE
grovers-algorithm|Python script and Jupyter notebook implementations of Grover's Algorithm aka Quantum Search Algorithm for n qubits and m targets.|lynkos|8|8|Jupyter Notebook|https://github.com/lynkos/grovers-algorithm|1.0|MIT License
QuantumPack|Couple of quantum algorithms written by using Qiskit python lib.|Rassska|0|0|Python|https://github.com/Rassska/QuantumPack|1.0|NO LICENSE
Quantum-Algorithms-basic|This repository contains notebooks that use Qiskit to simulate the most famous basic algorithms|wridhdhi|0|0||https://github.com/wridhdhi/Quantum-Algorithms-basic|1.0|MIT License
Quantum-Computing-Algorithms-Implemented-on-IBM-s-QSAM-Qiskit|Quantum Computing Algorithms Implemented on IBM's QASM Coding Architecture Built on Python & Shor's Algorithm use to breaking RSA.|AnuvabSen1|0|0|Jupyter Notebook|https://github.com/AnuvabSen1/Quantum-Computing-Algorithms-Implemented-on-IBM-s-QSAM-Qiskit|1.0|MIT License
nisq-grover-qiskit-floquet-model|floquet analysis of the grover's algorithm with qiskit decomposition|psasanka1729|0|0|Jupyter Notebook|https://github.com/psasanka1729/nisq-grover-qiskit-floquet-model|1.0|NO LICENSE
qiskit-HHL|A jupyter notebook with the implementation of the quantum algorithm HHL based on https://arxiv.org/abs/1802.08227|LeDernier|0|0|Jupyter Notebook|https://github.com/LeDernier/qiskit-HHL|1.0|MIT License
Quantum-Algorithms-Benchmarking|Benchmarking of various popular Quantum Algorithms w.r.t various Platforms like Qiskit, CIRQ, etc.|PavanCyborg|0|0|Jupyter Notebook|https://github.com/PavanCyborg/Quantum-Algorithms-Benchmarking|1.0|NO LICENSE
QC-jupyter|Implement Quantum Algorithm in jupyter notebook with qiskit|xin-0|0|0|Jupyter Notebook|https://github.com/xin-0/QC-jupyter|1.0|NO LICENSE
Grovers-Algorithm|An Implementation of Grover's Algorithm in Qiskit|trevorpiltch|0|0|Python|https://github.com/trevorpiltch/Grovers-Algorithm|1.0|NO LICENSE
Quantum-Computing-using-Qiskit-SDK|Exploration of the Quantum World is in progress with help of Qiskit SDK from IBM. You can various circuits and algorithms implemented in this repo|Harshithan07|0|0|Jupyter Notebook|https://github.com/Harshithan07/Quantum-Computing-using-Qiskit-SDK|1.0|NO LICENSE
grovers-algothrim|Running Grovers algorithm on a Qiskit Quantum Simulator|55blabs|0|0|Python|https://github.com/55blabs/grovers-algothrim|1.0|NO LICENSE
QDA-python|the qiskit version of quantum discrete adiabatic algorithm|RichardSun2019|0|0|Python|https://github.com/RichardSun2019/QDA-python|1.0|NO LICENSE
qiskit-grovers-3by3|Implementation of Grover's Algorithm on 3 by 3 Binary Sudoku|theRealNoah|0|0|Python|https://github.com/theRealNoah/qiskit-grovers-3by3|1.0|NO LICENSE
Shor-Algo|Simulating working of Shor's Algorithm using Qiskit|Yadu9238|0|0|Jupyter Notebook|https://github.com/Yadu9238/Shor-Algo|1.0|NO LICENSE
QuantumAlgorithm|Learning and implementing quantum gates/algorithm by qiskit|yezhuoyang|0|0||https://github.com/yezhuoyang/QuantumAlgorithm|1.0|NO LICENSE
Quantum_phase_estimation|Implementation of quantum phase estimation algorithm in qiskit|darkmatter2000|0|0|Jupyter Notebook|https://github.com/darkmatter2000/Quantum_phase_estimation|1.0|NO LICENSE
Quantum-gates|Basic quantum gates execution on Qiskit and some  important Quantum Algorithms.|topgun007-oss|0|0|Jupyter Notebook|https://github.com/topgun007-oss/Quantum-gates|1.0|NO LICENSE
Quantum-Database-Search|Implementation of Grover's algorithm with IBM-Qiskit|soultanis|1|1|Jupyter Notebook|https://github.com/soultanis/Quantum-Database-Search|1.0|NO LICENSE
SSVQE|An implementation of the SSVQE algorithm in Qiskit|JoelHBierman|0|0|Python|https://github.com/JoelHBierman/SSVQE|1.0|Apache License 2.0
qiskit_iterative_solver|Implementation of the iterative QC algorithm to solve a linear system on Qiskit using QSP/QET techniaues|osamarais|0|0|Jupyter Notebook|https://github.com/osamarais/qiskit_iterative_solver|1.0|NO LICENSE
Quantum-Hadamard-Edge-detection|Quantum Edge detection algorithm using Hadamard gates based Quantum circuit|Akshara-Bulkapuram|2|2|Jupyter Notebook|https://github.com/Akshara-Bulkapuram/Quantum-Hadamard-Edge-detection|1.0|NO LICENSE
GroversAlgorithmQSvsQiskit|Understanding the different results from executing Grover's Search Algorithm in Microsoft Q# and Qiskit|m0tela01|0|0|C#|https://github.com/m0tela01/GroversAlgorithmQSvsQiskit|1.0|NO LICENSE
Introduction-To-Qiskit|This notebook serves as an introduction to the basic concepts behind the implementation of Shor's Algorithm in Qiskit|pathakis|0|0|Jupyter Notebook|https://github.com/pathakis/Introduction-To-Qiskit|1.0|NO LICENSE
Qiskit_Hackathon_ETH|Quantum algorithm that efficiently estimates the mean of a stochastic distribution using Monte Carlo method and Quantum Amplitude Estimation.|marcoparadina|1|1|Jupyter Notebook|https://github.com/marcoparadina/Qiskit_Hackathon_ETH|1.0|Apache License 2.0
Grover-Search|A repository containing my experiments related to coding quantum computers and quantum algorithms.|AlluSu|0|0|Python|https://github.com/AlluSu/Grover-Search|1.0|NO LICENSE
Quantum_computing|Some of the most used quantum algorithm developed in cirq from google and qiskit from ibm |NicoGiamm|2|2|Jupyter Notebook|https://github.com/NicoGiamm/Quantum_computing|1.0|NO LICENSE
Open-Quantum-Systems-Algorithms|Qiskit Programs to implement Quantum Channels, create noise models, measure fidelities, Playing with Lindblad Master Equations.|RishwiBT|0|0|Jupyter Notebook|https://github.com/RishwiBT/Open-Quantum-Systems-Algorithms|1.0|MIT License
dinner-problem|Dinner Problem using Grover's Algorithm.|darkn3to|0|0|Jupyter Notebook|https://github.com/darkn3to/dinner-problem|1.0|NO LICENSE
Quantum-Algorithms-and-Circuits|The Repository contains beginner friendly Quantum Circuits and Quantum Algorithms performed using the qiskit python library.|Jayshah25|1|1|Jupyter Notebook|https://github.com/Jayshah25/Quantum-Algorithms-and-Circuits|1.0|NO LICENSE
Deutsch_Jozsa_qiskit|Notebook for the Deutsch Jozsa algorithm implemented in Qiskit and how to use the IBM quantum cloud to use real device|Christophe-pere|0|0|Jupyter Notebook|https://github.com/Christophe-pere/Deutsch_Jozsa_qiskit|1.0|NO LICENSE
qgss_2021_labs|Labwork at Qiskit Global Summer school 2021 demonstrating applied algorithms and simulations on Quantum Computing and Quantum Machine Learning using Qiskit.|maximusron|0|0|Jupyter Notebook|https://github.com/maximusron/qgss_2021_labs|1.0|NO LICENSE
rodeo-algorithm|Qiskit code for running the Rodeo Algorithm, an iterative phase kickback algorithm.|jacobwatkins1|0|0|Jupyter Notebook|https://github.com/jacobwatkins1/rodeo-algorithm|1.0|NO LICENSE
Quantum-Computing-Circuits|Circuits for Shor's algorithm and Grover's Search algorithm using Qiskit.|AislingHeanue|0|0|Jupyter Notebook|https://github.com/AislingHeanue/Quantum-Computing-Circuits|1.0|NO LICENSE
QC_Benchmarks_using_dm-simulator|Goal: Adapt Qiskit-based algorithms for compatibility with QSim through appropriate modifications.|GIRISHBELANI|0|0|Jupyter Notebook|https://github.com/GIRISHBELANI/QC_Benchmarks_using_dm-simulator|1.0|NO LICENSE
grover-quantum-algorithm|Grover's Quantum algorithm simulation in IBM Qiskit librairie|ughyper3|1|1|Python|https://github.com/ughyper3/grover-quantum-algorithm|1.0|NO LICENSE
ShorAlgo|Simplified Shor Algorithm implemented with Qiskit for university project|RicardoBBS|0|0|Python|https://github.com/RicardoBBS/ShorAlgo|1.0|MIT License
IBM_quantum_challenge_2020|Solving puzzles using Grover's algorithm with IBM Qiskit|shufan-mct|0|0|Jupyter Notebook|https://github.com/shufan-mct/IBM_quantum_challenge_2020|1.0|NO LICENSE
kisskitqiskit|This repository includes algorithm implementations using Python and Qiskit.|coder-bean|0|0|Jupyter Notebook|https://github.com/coder-bean/kisskitqiskit|1.0|NO LICENSE
vqls-bachelor-thesis|An implementation of the VQLS-algorithm in the quantum-simulator Qiskit for a Bachelor Thesis at the University Bonn. The algorithm was proposed by Bravo-Prieto et al. |muehlhausen|3|3|Python|https://github.com/muehlhausen/vqls-bachelor-thesis|1.0|NO LICENSE
Quantum-Teleportation|Quantum Teleportation algorithm on Qiskit with Basic of QC|tanmaybisen31|0|0|Jupyter Notebook|https://github.com/tanmaybisen31/Quantum-Teleportation|1.0|NO LICENSE
Tutorial_QAOA_maxcut_Qiskit_FallFest|Tutorial of the Quantum Approximate Optimization Algorithm (QAOA) for the Max-cut problem|victor-onofre|1|1|Jupyter Notebook|https://github.com/victor-onofre/Tutorial_QAOA_maxcut_Qiskit_FallFest|1.0|NO LICENSE
EmergingTechnologies|Yr4 Module looking at Qiskit and the Deutsch Algorithm|DavidFitzharris|0|0|Jupyter Notebook|https://github.com/DavidFitzharris/EmergingTechnologies|1.0|NO LICENSE
FourQuantumAlgorithms|Created 4 python scripts that use Qiskit to implement the Deutsch-Jozsa, Bernstein‚ÄìVazirani, Simon, and Grover quantum algorithms.|rishikhurana2|0|0|Python|https://github.com/rishikhurana2/FourQuantumAlgorithms|1.0|NO LICENSE
Qiskit-Maze-2021|2021 - Hackathon Qiskit Phase 1 - QMS Quantum algorithm that will be able to solve a maze and try to get better results than a classic AI.|lucas-mrq|0|0||https://github.com/lucas-mrq/Qiskit-Maze-2021|1.0|NO LICENSE
Deutsch-Jozsa-Algorithm-Qiskit|Deutsch-Jozsa Algorithm implemented in IBM's Qiskit. This implementation closely follows the implementation done in Qiskit Global Summer School 2020.|anish-ku|0|0|Jupyter Notebook|https://github.com/anish-ku/Deutsch-Jozsa-Algorithm-Qiskit|1.0|NO LICENSE
volta|Library to create faster workflows for variational algorithms and quantum simulations using qiskit.|nahumsa|1|1|Jupyter Notebook|https://github.com/nahumsa/volta|1.0|NO LICENSE
CMSC457|Practice coding on quantum clouds using qiskit and written assignments evaluating quantum algorithms|brhn-4|0|0|TeX|https://github.com/brhn-4/CMSC457|1.0|NO LICENSE
quantum-computing-algorithms|Repository mainly with qiskit codes and symbolic computations of linear algebra content found in articles and textbooks concerning Quantum Computing.|bertolinocastro|0|0|Jupyter Notebook|https://github.com/bertolinocastro/quantum-computing-algorithms|1.0|NO LICENSE
qiskit_hackathon_korea-decode_bitcoin_address|Decode the address of the Blockchain wallet using Shor algorithm and print the private key.|rubidiumchain|1|1||https://github.com/rubidiumchain/qiskit_hackathon_korea-decode_bitcoin_address|1.0|NO LICENSE
Quantum-Codes-Qiskit-Module-|Explore quantum computing with Qiskit! Dive into Grover's algorithm, Quantum Fourier Transform, and more. Includes code executed on IBM Quantum Experience.|AMevans12|1|1|Jupyter Notebook|https://github.com/AMevans12/Quantum-Codes-Qiskit-Module-|1.0|NO LICENSE
playing_with_quantum_computing|Trying out basic IBM's Qiskit and replicate results from Hamiltonian simulation algorithms|Rodri-rf|0|0|Jupyter Notebook|https://github.com/Rodri-rf/playing_with_quantum_computing|1.0|NO LICENSE
HighErrorRateRouting|Code for the High Error Rate Routing Qiskit Routing Algorithm|Seanaventure|0|0|Python|https://github.com/Seanaventure/HighErrorRateRouting|1.0|NO LICENSE
discrete-log-quantum|Qiskit Simulation of a Quantum Algorithm for Discrete Log Problem|dhruvesh-asnani|0|0|Jupyter Notebook|https://github.com/dhruvesh-asnani/discrete-log-quantum|1.0|NO LICENSE
quantum-computing-final-project|Complexity analysis of Qiskit‚Äôs implementation of Shor‚Äôs algorithm|pkaran57|0|0|Python|https://github.com/pkaran57/quantum-computing-final-project|1.0|NO LICENSE
grovers|Grover's quantum search algorithm implemented in Python with Qiskit|theochemel|0|0|Jupyter Notebook|https://github.com/theochemel/grovers|1.0|NO LICENSE
QuantumDecoder|A Simple intensive implementation of Bernstein-Vazirani Algorithm using Qiskit .|AdityaZade|0|0|Jupyter Notebook|https://github.com/AdityaZade/QuantumDecoder|1.0|NO LICENSE
Quantum-K-Means|Qiskit Implementation of swap-test based quantum K-means algorithm|Muhi0709|1|1|Jupyter Notebook|https://github.com/Muhi0709/Quantum-K-Means|1.0|NO LICENSE
quantum-project|An implementation of the Buhrmann quantum algorithm for solving the Mastermind game.|drobiu|1|1|Jupyter Notebook|https://github.com/drobiu/quantum-project|1.0|NO LICENSE
The-Quantum-Teleportation-Algorithm|Programming The Quantum Teleportation Algorithm with the help of Qiskit.|bopardikarsoham|1|1|Jupyter Notebook|https://github.com/bopardikarsoham/The-Quantum-Teleportation-Algorithm|1.0|NO LICENSE
Shor-s-Algorithm-using-Qiskit|Implement Shor's algorithm using Qiskit and Python, designing a Quantum Circuit to generate the periodicity and calculate the prime factors.|INFINIT27|0|0|Jupyter Notebook|https://github.com/INFINIT27/Shor-s-Algorithm-using-Qiskit|1.0|NO LICENSE
Quantum-computing|Quantum computing notebooks, EDA, Algorithms, Grover algorithm, machine learning on a quantum level using ibm qiskit|eleyeth|0|0|Jupyter Notebook|https://github.com/eleyeth/Quantum-computing|1.0|MIT License
GroversSearchAlgorithm|Qiskit implementiation of Grovers Search Algorithm for a quantum computer|Cgrubick|0|0|Python|https://github.com/Cgrubick/GroversSearchAlgorithm|1.0|NO LICENSE
QuantumKitchenSinks|Qiskit-based implementation of the Quantum Kitchen Sinks (QKS) algorithm.|DmitriiNabok|0|0|Jupyter Notebook|https://github.com/DmitriiNabok/QuantumKitchenSinks|1.0|MIT License
Quantum-Algorithm-Tutorials|A collection of Quantum Algorithms and tutorials, written in OpenQASM and Python using qiskit|Marduk-42|1|1|Jupyter Notebook|https://github.com/Marduk-42/Quantum-Algorithm-Tutorials|1.0|NO LICENSE
Quantum-Computing-and-Cryptography|Implementations of some quantum algorithms/protocols from a workshop on quantum computing with Qiskit.|ankitkmisra|1|1|Jupyter Notebook|https://github.com/ankitkmisra/Quantum-Computing-and-Cryptography|1.0|NO LICENSE
quantum-search|Implementation of quantum search algorithm to search item index in an arbitrary array of numbers|IlliaOvcharenko|0|0|Python|https://github.com/IlliaOvcharenko/quantum-search|1.0|NO LICENSE
shor-algorithm|An implementation of Shor's algorithm written in Python with Qiskit|vladciocoiu|0|0|Jupyter Notebook|https://github.com/vladciocoiu/shor-algorithm|1.0|NO LICENSE
QuantumMedianFilter|An image processing algorithm implemented via Qiskit for a quantum computer|TheClintest|0|0|Python|https://github.com/TheClintest/QuantumMedianFilter|1.0|NO LICENSE
simon-s_algorithm|Implementation of Simon's algorithm using Open Quantum Assembly Language/QISKIT|dronabanerjee|0|0|OpenQASM|https://github.com/dronabanerjee/simon-s_algorithm|1.0|NO LICENSE
GroversAlgorithm|My implementation of Grover's algorithm using IBM's Qiskit framework.|NirdevPaul|0|0|Jupyter Notebook|https://github.com/NirdevPaul/GroversAlgorithm|1.0|GNU General Public License v3.0
shors-algorithm-quantum|Shor's factorization algorithm implementaion for Quantum Computer using IBM Qiskit.|riddheshMarkandeya|0|0|Jupyter Notebook|https://github.com/riddheshMarkandeya/shors-algorithm-quantum|1.0|NO LICENSE
quantum-mastermind|Qiskit implementation of the Mastermind game using Grover's Quantum Algorithm|surengalstyan|0|0||https://github.com/surengalstyan/quantum-mastermind|1.0|NO LICENSE
Quantum-Oracle|This is the project of the quantum algorithm.|1chooo|1|1|Python|https://github.com/1chooo/Quantum-Oracle|1.0|MIT License
Grover-s-Search-Algo-using-Qiskit|Grover search is one of the most popular algorithms used for searching a solution among many possible candidates using Quantum Computers. If there are N possible solutions among which there is exactly one solution, then Grover search can be used to find the solution with O(sqrt(N)) function evaluations.|shubz2900|0|0|Jupyter Notebook|https://github.com/shubz2900/Grover-s-Search-Algo-using-Qiskit|1.0|NO LICENSE
Shor-s-algorithm|Shor's algorithm implemented by quantum (Qiskit by IBM) and classical|RyosukeNORO|0|0|Jupyter Notebook|https://github.com/RyosukeNORO/Shor-s-algorithm|1.0|NO LICENSE
QuantumPhaseEstimation|Research paper evaluating the accuracy of Qiskit Quantum Phase Estimation algorithm|rhea-modey|0|0||https://github.com/rhea-modey/QuantumPhaseEstimation|1.0|NO LICENSE
qasp-solver|Quantum algorithms for solving ASP programs. MSc thesis project.|davidedellagiustina|0|0|Python|https://github.com/davidedellagiustina/qasp-solver|1.0|MIT License
basic-quantum-algorithms|This is a folder with notes and code for each of the basic quantum algorithms using common libraries and APIs like Qiskit, PyQuil, PennyLane, and more|daniel-molina23|1|1|Jupyter Notebook|https://github.com/daniel-molina23/basic-quantum-algorithms|1.0|NO LICENSE
qaoa_testing_framework|A simple qiskit script for testing different variants of the QAOA algorithm|JohnBurke4|0|0|Python|https://github.com/JohnBurke4/qaoa_testing_framework|1.0|MIT License
QASM|Repository including all the lessons I had undergone for learning Qiskit documentation and different quantum algorithms |madmen2|0|0|Jupyter Notebook|https://github.com/madmen2/QASM|1.0|NO LICENSE
grover_max_cut|grover search algorithm for solve max cut problem using IBM qiskit API |saalimon|0|0|Jupyter Notebook|https://github.com/saalimon/grover_max_cut|1.0|NO LICENSE
QuantumComputingScripts|Here I test algorithms on quantum computers. The scripts are programmed in Python with IBM Qiskit.|HypsoHypso|1|1|Python|https://github.com/HypsoHypso/QuantumComputingScripts|1.0|NO LICENSE
IBM-Variational-Algorithm-Design-Challenge|My attempts at the Variational Algorithm Design Challenges from the Qiskit textbook|hrahman12|0|0|Jupyter Notebook|https://github.com/hrahman12/IBM-Variational-Algorithm-Design-Challenge|1.0|NO LICENSE
Deutsch-Jozsa-Implementation|Repository containing a Quantum Deutsch-Jozsa Algorithm Implementation in Qiskit with explanation.|samabwhite|0|0|Jupyter Notebook|https://github.com/samabwhite/Deutsch-Jozsa-Implementation|1.0|NO LICENSE
Quantum-time-travel|A simple and advance concept of quantum time travel algorithm using Qiskit |MiChaelinzo|1|1|Python|https://github.com/MiChaelinzo/Quantum-time-travel|1.0|Creative Commons Zero v1.0 Universal
qecc_shor9q|Shor's 9-qubit algorithm for correcting quantum errors using Qiskit package.|sebastianvromero|1|1|Jupyter Notebook|https://github.com/sebastianvromero/qecc_shor9q|1.0|MIT License
SimonsAlgorithm|This is an implementation of Simon's Algorithm using Qiskit & Quantum Computing|BP-2|0|0|Python|https://github.com/BP-2/SimonsAlgorithm|1.0|NO LICENSE
hybrid_quantum_gap_estimation|This is the Qiskit code for the hybrid quantum gap estimation algorithm.|wrlee7609|0|0|Jupyter Notebook|https://github.com/wrlee7609/hybrid_quantum_gap_estimation|1.0|NO LICENSE
Solving-TSP-Using-QAOA-VQE-through-Qiskit|This repository provides an implementation of solving the Traveling Salesman Problem (TSP) using the Quantum Approximate Optimization Algorithm (QAOA) and the Variational Quantum Eigensolver (VQE) through Qiskit.  |Syed-Affan-Hussain|1|1|Jupyter Notebook|https://github.com/Syed-Affan-Hussain/Solving-TSP-Using-QAOA-VQE-through-Qiskit|1.0|Apache License 2.0
IBM-quantum-challenge-2020|My solutions to 5 exercises of IBM quantum challenge 2020. Topics include quantum full-adder circuit implementation, circuit optimization and solving various puzzles using Grover's search algorithm.|Keerthiraj-Nagaraj|4|4|Jupyter Notebook|https://github.com/Keerthiraj-Nagaraj/IBM-quantum-challenge-2020|1.0|NO LICENSE
QETCI-Hackathon-2022|Solving Hamiltonian's cycle problem using Grover's search algorithm on IBM Qiskit|Pahamanx|1|1|Jupyter Notebook|https://github.com/Pahamanx/QETCI-Hackathon-2022|1.0|NO LICENSE
qaoa|Implementation of the Quantum Approximate Optimization Algorithm for the MaxCut problem with Qiskit|NesyaLab|0|0|Jupyter Notebook|https://github.com/NesyaLab/qaoa|1.0|NO LICENSE
Quantum-Daemonum|A text-based game that runs Grover's algorithm using Qiskit's quantum simulator.|RachaelC358|0|0|Python|https://github.com/RachaelC358/Quantum-Daemonum|1.0|NO LICENSE
scientific-research-1-quantum-oracles|An article about how we can use quantum oracles to translate classical to quantum algorithms|Dpbm|1|1|Jupyter Notebook|https://github.com/Dpbm/scientific-research-1-quantum-oracles|1.0|NO LICENSE
kagome-vqe-on-heavy-hex|A method to compute the ground state energy of a Heisenberg spin-1/2 model on a Kagome lattice using the VQE algorithm on a Heavy Hex lattice quantum device.|clement-boisson|1|1|Jupyter Notebook|https://github.com/clement-boisson/kagome-vqe-on-heavy-hex|1.0|NO LICENSE
comp3316-a4-code|Quantum Fourier transform & phase estimation algorithm implementation with Qiskit, for assignment 4 @COMP3316, HKU.|xijia-tao|1|1|Jupyter Notebook|https://github.com/xijia-tao/comp3316-a4-code|1.0|NO LICENSE
Quantum-Computing-Learning-Gate|A study of some famous Quantum Computing algorithms, along with some elementary experiments using IBM's Quantum Experience systems,API and Qiskit.|sooodos|0|0|Python|https://github.com/sooodos/Quantum-Computing-Learning-Gate|1.0|NO LICENSE
quantum-grover-boolean-sat|Solve k-SAT problem with grover's algorithm in quantum computer|deadshot8086|0|0|Python|https://github.com/deadshot8086/quantum-grover-boolean-sat|1.0|GNU General Public License v3.0
Options-Trading|Using qiskit to implement an algorithm that provides the price of a European option|DeboQubie|0|0|Jupyter Notebook|https://github.com/DeboQubie/Options-Trading|1.0|NO LICENSE
QAOAPython|The Quantum Approximate Optimization Algorithm (Farhi et al) implemented on Cirq, ProjectQ, and Qiskit|jtiosue|0|0|Python|https://github.com/jtiosue/QAOAPython|1.0|MIT License
Quantum-Bitcoin|Code to run a proof-of-concept blockchain that uses Grovers algorithm and Qiskit.|Alternat3|0|0|Python|https://github.com/Alternat3/Quantum-Bitcoin|1.0|NO LICENSE
Quantum-poc|PoC for implementation of some quantum algorithm on qiskit and IBM quantum computer assembly|fermicat|0|0||https://github.com/fermicat/Quantum-poc|1.0|NO LICENSE
DeutschJozsaAlgorithm|This algorithm lets you to find a the type of a binary function in O(1) complexity instead of classical O(n/2) approach. This repository is an application interface to use Deutsch-Jozsa Algorithm.|electricalgorithm|0|0|Python|https://github.com/electricalgorithm/DeutschJozsaAlgorithm|1.0|MIT License
Shors_Algorithm|Shor's Algorithm implemented factorizing 63 on Qiskit using SWAP gates, Python 3.X|RokiyaMG|0|0|Jupyter Notebook|https://github.com/RokiyaMG/Shors_Algorithm|1.0|NO LICENSE
Grovers-algorithm|Implemented Grover's Algorithm in Qiskit for searching a number from a simple list. |SakshieP|0|0|Jupyter Notebook|https://github.com/SakshieP/Grovers-algorithm|1.0|NO LICENSE
quantum-maxcut|A quantum algorithm for the maximum cut problem in arbitrary graphs. Implementation using Qiskit.|renatawong|1|1|Jupyter Notebook|https://github.com/renatawong/quantum-maxcut|1.0|Apache License 2.0
GroverFor3SAT|Grover algorithm to solve exactly-1 3-SAT and 3-SAT problems with Qiskit|henryliao85|0|0|Jupyter Notebook|https://github.com/henryliao85/GroverFor3SAT|1.0|NO LICENSE
IPE-algorithm-tutorial|Create a tutorial for Iterative Phase Estimation (IPE) algorithm for the Qiskit Mentorship Program|Morcu|0|0||https://github.com/Morcu/IPE-algorithm-tutorial|1.0|NO LICENSE
quantum-research|Scratchwork focused on implementation of quantum algorithms, using qiskit Python, Jupyter Notebooks, Excel, MATLAB, and anything that seems useful.|tuf65651|0|0|Jupyter Notebook|https://github.com/tuf65651/quantum-research|1.0|NO LICENSE
Quantum-Computing-and-Information|"Quantum Computing Notes | Quantum algorithms and protocols using qiskit | QFT using Pennylane and Cirq | Xanadu CodeBook | Tutorials in Cirq"|JessicaJohnBritto|1|1|Jupyter Notebook|https://github.com/JessicaJohnBritto/Quantum-Computing-and-Information|1.0|NO LICENSE
quantum-crop-optimization|Using Qiskit libraries and quantum algorithms (QAOA/VQE) to optimize which crops to grow. Sends tasks to IBM simulators.|nikhil-kamath|0|0|Jupyter Notebook|https://github.com/nikhil-kamath/quantum-crop-optimization|1.0|NO LICENSE
QC-Grover|Quantu code in QISKIT to run Grover's algorithm, also known as the quantum search algorithm, on IBM Q|AlbertoVari|0|0|Python|https://github.com/AlbertoVari/QC-Grover|1.0|NO LICENSE
QuantumFourierTransform|This algorithm lets you to apply DFT to a state with quantum circuits. It has decreased the complexity to O(NlogN) from classical O(N^2) approach. This repository is an application interface to use QFT and inverse QFT algorithms.|electricalgorithm|0|0|Python|https://github.com/electricalgorithm/QuantumFourierTransform|1.0|MIT License
BIP-Poznan-QRW-Search-Algorithm|BIP Pozna≈Ñ final project: QRW search algorithm (AMU) |werefin|0|0|Jupyter Notebook|https://github.com/werefin/BIP-Poznan-QRW-Search-Algorithm|1.0|MIT License
4-Qubit-Teleportation|This Reop is created due to the implementation of 4 Qubit Teleportation algorithm with qiskit|MahmoodSpewAfsh|0|0|Jupyter Notebook|https://github.com/MahmoodSpewAfsh/4-Qubit-Teleportation|1.0|NO LICENSE
dicke_states_preparation|Repository with Python/Qiskit implementation of the Dicke states preparation algorithm by B√§rtschi and Eidenbenz|andre-juan|1|1|Jupyter Notebook|https://github.com/andre-juan/dicke_states_preparation|1.0|Apache License 2.0
Grover-s_Algorithm|Implemented Grover's Algorithm on 2 and 3 qubits using qiskit and IBMQ quantum computers.|alexyev|0|0|Jupyter Notebook|https://github.com/alexyev/Grover-s_Algorithm|1.0|NO LICENSE
quantum-expressibility-entangling-capability|Quantum expressibility and entangling capability calculation algorithm implemented by qiskit. See https://arxiv.org/abs/1905.10876üíø|usamisaori|0|0|Jupyter Notebook|https://github.com/usamisaori/quantum-expressibility-entangling-capability|1.0|NO LICENSE
QHarmony|QHarmony: Quantum Solid-State Predictions with Qiskit and JARVIS. Explore advanced quantum algorithms for efficient band structure calculations in materials science.|adiazcarral|0|0|Python|https://github.com/adiazcarral/QHarmony|1.0|NO LICENSE
Grovers_Search_Algorithm|Unstructured Database search in sub-linear time. Implementation of Grover's Search Algorithm using Qiskit (searching for 4 combinations out of 16).|ayush-vatsal|0|0|Jupyter Notebook|https://github.com/ayush-vatsal/Grovers_Search_Algorithm|1.0|NO LICENSE
NasaNEO_Classification|This project presents a comparative study of Quantum Naive Bayes and Classical Gaussian Naive Bayes algorithms applied to the NASA Nearest Earth Object Dataset.|AmanSinghBhogal|1|1|Jupyter Notebook|https://github.com/AmanSinghBhogal/NasaNEO_Classification|1.0|MIT License
OracleCircuit|Constructing an oracle circuit for use in solving an SAT problem with Grover's algorithm - QISKIT|TaiteHopkins|0|0|Python|https://github.com/TaiteHopkins/OracleCircuit|1.0|NO LICENSE
Boolean-SAT-using-Grovers-algorithm|Boolean 5-SAT problem of 'Grover's dinner party' solved using Grover's algorithm in Qiskit|SambitPrabhu|1|1|Jupyter Notebook|https://github.com/SambitPrabhu/Boolean-SAT-using-Grovers-algorithm|1.0|NO LICENSE
quantum_nearest_neighbors|Repository with Python/Qiskit implementation of the quantum nearest neighbor algorithm introduced by Schuld et al.|andre-juan|0|0|Jupyter Notebook|https://github.com/andre-juan/quantum_nearest_neighbors|1.0|NO LICENSE
Quantum-Computing-Dynamic-Circuits|(Qiskit Quantum Challenge: Spring 2023) Challenge focuses on Dynamic Circuits, a technology that makes it easier to run more advanced quantum algorithms.|divyanshchoubisa|0|0|Jupyter Notebook|https://github.com/divyanshchoubisa/Quantum-Computing-Dynamic-Circuits|1.0|MIT License
BernsteinVaziraniAlgorithm|Find a secret number with O(1) complexity using Quantum Computing instead of classical O(n) approach. The repository is an application interface to use the Bernstein-Vazirani algorithm. |electricalgorithm|0|0|Python|https://github.com/electricalgorithm/BernsteinVaziraniAlgorithm|1.0|MIT License
Quantum-Computing-3SAT|Bachelor's thesis: Solving the 3-SAT problem using quantum algorithms|arnaucasau|0|0|Jupyter Notebook|https://github.com/arnaucasau/Quantum-Computing-3SAT|1.0|NO LICENSE
QuantumApproximationOptimizationAlgorithm|Using Qiskit library to implement the Quantum Approximation Optimization Algorithm to solve Quadratic Unconstrained Binary Optimization problems |sprynder|0|0|Jupyter Notebook|https://github.com/sprynder/QuantumApproximationOptimizationAlgorithm|1.0|NO LICENSE
QAOA-for-exact-cover|Quantum computing course project: Implementing Quantum Approximate Optimisation Algorithm (QAOA) for exact cover problem using IBM qiskit|kosakhro|0|0|Jupyter Notebook|https://github.com/kosakhro/QAOA-for-exact-cover|1.0|NO LICENSE
QUDA|QUDA architecture defined with a Qiskit like simulator, to be written in python, with an expert system for scheduling algorithms in QPU units.|synergy-robotics-a-b|0|0||https://github.com/synergy-robotics-a-b/QUDA|1.0|NO LICENSE
mucomcu04|Quantum Logic Gates exercises - Bell states, quantum addition, and teleportation algorithm implementation in Python using QISKit Quantum Lab.|albertnieto|1|1|Jupyter Notebook|https://github.com/albertnieto/mucomcu04|1.0|NO LICENSE
Quantum-Information-Science|Learning journey in quantum information science including quantum algorithms, such as Shor's algorithm as well as quantum computing and quantum circuits using qiskit or any other related package |sohrabganjian|0|0|Jupyter Notebook|https://github.com/sohrabganjian/Quantum-Information-Science|1.0|NO LICENSE
Quantum-Computing-and-Programming|This repository contains quantum computing algorithms such as Grover Search, Simon's Algorithm and Oracle. It also contains Quantum Kernel Machine Learning SVM classifier made using Qiskit and Python. |ratansahu05|0|0|Jupyter Notebook|https://github.com/ratansahu05/Quantum-Computing-and-Programming|1.0|NO LICENSE
DifferentialEvolution|The implementation of the Differential Evolution (DE) method from SciPy has been adapted into a Qiskit Optimizer class. This adaptation enables the utilization of classical optimization algorithm within Qiskit's quantum computing framework.|imihalik|0|0|Python|https://github.com/imihalik/DifferentialEvolution|1.0|NO LICENSE
Quantum-Computing-Mini-Projects|Shor's Quantum Algorithm to Break RSA Encryption/ Hybrid Quantum-Classical Neural Network with PyTorch/Qiskit - (IBM Quantum Experience)|tanvipenumudy|1|1|Jupyter Notebook|https://github.com/tanvipenumudy/Quantum-Computing-Mini-Projects|1.0|NO LICENSE
Quantum-Error-Correction|Quantum Error Correction (QEC) is a critical step in implementing quantum computing at scale. We implement an algorithm and show it successfully reduces noise in various quantum circuits.|JayRGopal|1|1|Jupyter Notebook|https://github.com/JayRGopal/Quantum-Error-Correction|1.0|NO LICENSE
Grover-Algorithm|Final project of the course Advanced Topics in Algorithms - CIn UFPE, which presents an introduction to Quantum Computing. This repository contains the Implementation of Grover's Algorithm using the Qiskit library. |matheusvtna|0|0|Jupyter Notebook|https://github.com/matheusvtna/Grover-Algorithm|1.0|NO LICENSE
A-Simple-Guide-to-Quantum-Approaches-for-Solving-Max-Cut|Explore quantum optimization with continuous-time walks on graphs and quantum approximation algorithms. Implement Max-Cut solutions in Python and Qiskit. Simplified explanations for all levels.|MansourZarrin|0|0|Jupyter Notebook|https://github.com/MansourZarrin/A-Simple-Guide-to-Quantum-Approaches-for-Solving-Max-Cut|1.0|NO LICENSE
Quantum_computer_data_collection_HHL_algorithm_circuit_with_NoiseAnalysis_Framework|HHL algorithm quantum circuit is created using IBM Qiskit and data collection in CSV file is shown for each of the stages of HHL algorithm circuit.|anikazaman24|0|0|Jupyter Notebook|https://github.com/anikazaman24/Quantum_computer_data_collection_HHL_algorithm_circuit_with_NoiseAnalysis_Framework|1.0|NO LICENSE
tcc-information-systems|This repository gathers the material of my course conclusion work (TCC) at Unisinos - theme of the work: Quantum Computing - Analysis of Quantum Algorithms for Solving the SAT Problem in the NISQ Era|robinsonvs|0|0|Jupyter Notebook|https://github.com/robinsonvs/tcc-information-systems|1.0|NO LICENSE
register-by-constant-qft-adder|Implementation of the quantum register-by-constant addition algorithm based on quantum Fourier transform.|FilipeChagasDev|0|0|Python|https://github.com/FilipeChagasDev/register-by-constant-qft-adder|1.0|MIT License
Bernstein-Vazirani-Circuit|Creating an illustration of the circuit of the Bernstein-Vazirani algorithm using python and libraries such as qiskit and matplotlib|sahar-saoudi|0|0|Python|https://github.com/sahar-saoudi/Bernstein-Vazirani-Circuit|1.0|NO LICENSE
quantum-algorithm-Grover-s-algorithm-|Grover's algorithm is a quantum algorithm that can be used to search an unsorted database with a quadratic speedup compared to classical algorithms. The code snippet above demonstrates the implementation of Grover's algorithm in Python using the Qiskit library.|Rafiqcompton|1|1||https://github.com/Rafiqcompton/quantum-algorithm-Grover-s-algorithm-|1.0|NO LICENSE
Grover_Algorithm_Project|This project aims at solving a boolean satisfiability problem (dinner problem) using Grover's algorithm. I have made this project as a part of the IITR QCG- Open Summer Project, 2022.|ansh25saini|0|0|Jupyter Notebook|https://github.com/ansh25saini/Grover_Algorithm_Project|1.0|NO LICENSE
Implementing-Grover-s-Algorithm|Here we implement Grover's algorithm in `Qiskit` by creating a quantum circuit that has the marked elements 000001 and 101010.|S-Ganesh980|1|1|Jupyter Notebook|https://github.com/S-Ganesh980/Implementing-Grover-s-Algorithm|1.0|NO LICENSE
Variation-Circuit-Based-Hybrid-Quantum-Classical-Binary-Algorithm|Buiding a Variation Circuit Based Hybrid Quantum Classical Binary Algorithm (VC-HQCA) from scratch and compare in with Qiskit VQC classifier|LarianeMohceneMouad|1|1|Jupyter Notebook|https://github.com/LarianeMohceneMouad/Variation-Circuit-Based-Hybrid-Quantum-Classical-Binary-Algorithm|1.0|Apache License 2.0
QPapersPlease|A quantum algorithm to papers please game|Dpbm|0|0|Jupyter Notebook|https://github.com/Dpbm/QPapersPlease|1.0|NO LICENSE
grover_algorithm_2_qubits|We are running Grover Algorithm : The Algorithm the search the database through the Quantum Algorithm.  It is really important to understand the Grover Algorithm first, which is mainly used to reduce the complexity of the Searching Algorithm. This is the explanation of using the Grover Algorithm : https://qiskit.org/textbook/ch-algorithms/grover.html|IdhamHabibie|0|0|Jupyter Notebook|https://github.com/IdhamHabibie/grover_algorithm_2_qubits|1.0|NO LICENSE
qLipschitz|Quantum faireness verifying algorithm based on calculating Lipschitz constant, an implementaion of paper: https://arxiv.org/pdf/2207.11173.pdfüíø|usamisaori|0|0|Jupyter Notebook|https://github.com/usamisaori/qLipschitz|1.0|NO LICENSE
QuantumCompDemo|Demonstration for a VTCS class showing how Qiskit can be used to implement quantum circuits and algorithms. Shows demos on building a simple state of entanglement as well as a shortened version of shor's algorithm.|tombillo1|0|0|Jupyter Notebook|https://github.com/tombillo1/QuantumCompDemo|1.0|NO LICENSE
quantum_ml_library|This repository contains a cutting-edge library for building quantum machine learning models, with support for popular quantum computing frameworks like Qiskit and Cirq. The library includes a range of pre-built quantum machine learning algorithms, as well as tools for building and training custom models.|KOSASIH|2|2|Python|https://github.com/KOSASIH/quantum_ml_library|1.0|MIT License
Grozzle|Puzzle game using quantum computer and Grover algorithm.|iasebsil83|0|0|Python|https://github.com/iasebsil83/Grozzle|1.0|GNU General Public License v3.0
Optimized-Shor-Algorithm-for-factoring|Factored 21 and 51 using two optimal techniques of Shor's Algorithm, requiring far fewer qubits than the standard approach.|hritiksauw199|0|0|Jupyter Notebook|https://github.com/hritiksauw199/Optimized-Shor-Algorithm-for-factoring|1.0|MIT License
Deutsch_Jozsa|Explore the Deutsch-Jozsa algorithm with this Python implementation using Qiskit. It efficiently identifies constant or balanced Boolean functions, highlighting the quantum computing advantage.|iAbdullahAlshehri|0|0|Python|https://github.com/iAbdullahAlshehri/Deutsch_Jozsa|1.0|NO LICENSE
Grover-s-algorithm|Grover's algorithm is a quantum algorithm that can be used to search an unsorted database of N items in O(sqrt(N)) time. Here's how to implement it using Qiskit:|sudharsonkumar|0|0|Jupyter Notebook|https://github.com/sudharsonkumar/Grover-s-algorithm|1.0|NO LICENSE
AIMRP-USD-EDU-ENVO-EST|Qiskit is an open-source quantum computing software development framework. It provides tools for working with quantum circuits, algorithms, and simulating quantum computations. Version 0.32.0 N3XT: integrate into .MIA FRAMEWORK|illenium-design|0|0||https://github.com/illenium-design/AIMRP-USD-EDU-ENVO-EST|1.0|Boost Software License 1.0
Quantum-Algorithm-Implementations|Repo for python code utilizing the qiskit library that can run some of the various quantum algorithms from the post-quantum monero technical paper on actual quantum hardware available through the IBM quantum experience. |hamburgerguy|1|1|Python|https://github.com/hamburgerguy/Quantum-Algorithm-Implementations|1.0|NO LICENSE
QAOA-uniform-convergence|This repository showcases a Python codebase utilizing Qiskit, IBM's open-source quantum computing framework, to demonstrate uniform convergence in the Quantum Approximate Optimization Algorithm (QAOA)|PabloMartinezAngerosa|0|0|Jupyter Notebook|https://github.com/PabloMartinezAngerosa/QAOA-uniform-convergence|1.0|NO LICENSE
Quantum-Optimization-for-Solar-Farm|This repo hosts code for optimizing solar farm energy storage using Qiskit and quantum algorithms. It includes data preprocessing, QUBO formulation, quantum optimization, and results analysis to improve efficiency, minimize costs, and reduce CO2 emissions.|jaykomarraju|0|0|Jupyter Notebook|https://github.com/jaykomarraju/Quantum-Optimization-for-Solar-Farm|1.0|NO LICENSE
Ising-VQE|Here I show an implementation in qiskit of the VQE algorithm to simulate a particular Ising model that undergoes a phase transition caused by local boundary fields. I also implement the ZNE error mitigation protocol, and also explore the T-REX protocol available in Qiskit Runtime|ACDuriez|0|0|Jupyter Notebook|https://github.com/ACDuriez/Ising-VQE|1.0|MIT License
Quantum-Computing-Mentorship-Task-4-Code|Implementation of the Variational Quantum Eigensolver (VQE) algorithm to find the minimum eigenvalue of a 4x4 Hermitian matrix. Used Qiskit and Python on an IBM quantum computer.|unif2|1|1|Jupyter Notebook|https://github.com/unif2/Quantum-Computing-Mentorship-Task-4-Code|1.0|NO LICENSE
QuantumComputingAndPrimesAndOthers|Quantum Computing, Primes Patterns, Shor's Algorithm, RSA Cryptosystem, GNFS, Quantum Fourier transform, Mersenne Primes, PI, And Others notes.|khaledalam|0|0|Jupyter Notebook|https://github.com/khaledalam/QuantumComputingAndPrimesAndOthers|1.0|NO LICENSE
Quantum-Computation|Explore quantum programming with Qiskit, IBM's open-source quantum computing framework. Create quantum circuits, simulate them, and run on quantum hardware. Implement quantum algorithms, visualize circuits, and access documentation for a powerful journey into quantum computing.|acfilok96|0|0|Jupyter Notebook|https://github.com/acfilok96/Quantum-Computation|1.0|NO LICENSE
Masters-Thesis-on-Quantum-Cryptography|The title of the thesis is Shor's algorithm in Quantum Cryptography. This repository contains the data and Jupyter notebooks containing the codes used in the Quantum simulations of different variants of Shor's quantum factoring algorithm. While IBM Qiskit has already implemented the algorithm using the standard Quantum Fourier Transform (QFT), this project goes further to implement the algorithm using the Semiclassical QFT. This new variant helps in optimizing the number of qubits needed for quantum computation.|martynscn|2|2|Jupyter Notebook|https://github.com/martynscn/Masters-Thesis-on-Quantum-Cryptography|1.0|NO LICENSE
Quantum-Convolutional-Neural-Network|Leveraging the Qiskit library, to explore the fascinating field of quantum machine learning to enhance our understanding of quantum classifiers. Dive into the world of quantum algorithms and explore the potential of quantum computing in image classification tasks.|AnkRaw|1|1|Jupyter Notebook|https://github.com/AnkRaw/Quantum-Convolutional-Neural-Network|1.0|NO LICENSE
DeutschJosza_algorithm|"This repository comprises an implementation and an elaborate explanation of the Deutsch-Josza algorithm, utilizing the IBM quantum computing library, Qiskit. The algorithm is realized in the Jupyter notebook titled ""Algoritmo-DeutschJosza.ipynb"" and is presented in Spanish."|EusseJhoan|0|0|Jupyter Notebook|https://github.com/EusseJhoan/DeutschJosza_algorithm|1.0|NO LICENSE
BB84-Protocol-for-QKD|A simulation of the BB84 protocol in a Jupyter Notebook using the code from https://qiskit.org/textbook/ch-algorithms/quantum-key-distribution.html.  Protocol steps until key sifting have been implemented.  Error correction & parameter estimation were not executed. |strangequarkkk|0|0|Jupyter Notebook|https://github.com/strangequarkkk/BB84-Protocol-for-QKD|1.0|NO LICENSE
Shor-s-Quantum-Algorithm|"Using Shor's Algorithm, a quantum computer will be able to crack any RSA encryption since the main problem is to find two large prime numbers that multiplied have the value ""x"". Quantum Superposition gives us a fast answer to this problem."|luis6156|1|1|Jupyter Notebook|https://github.com/luis6156/Shor-s-Quantum-Algorithm|1.0|NO LICENSE
TSP-Problem-Study|This repository hosts some solutions to the combinatorial optimization problem called Traveling Salesman Problem. It includes a multi-core, CUDA, and a Quantum Solution with Qiskit. With different algorithm strategies. |hugoecarl|0|0|Jupyter Notebook|https://github.com/hugoecarl/TSP-Problem-Study|1.0|NO LICENSE
antisymmetrization-circuit|Qiskit implementation of method for generating anti-symmetric states for fermionic quantum chemistry simulations on a quantum computer (algorithm based on https://www.nature.com/articles/s41534-018-0071-5))|LeanderThiessen|0|0|Python|https://github.com/LeanderThiessen/antisymmetrization-circuit|1.0|NO LICENSE
Quantum-Simulation-of-the-ground-states-of-Li-and-Li-2-using-Variational-Quantum-EIgensolver|The codes of my work on the quantum simulation of ground states of Li(+) and Li(2+) ions using QISKIT and PySCF. The algorithm used here is Variational Quantum Eigensolver.|Bikramaditya0154|1|1|Jupyter Notebook|https://github.com/Bikramaditya0154/Quantum-Simulation-of-the-ground-states-of-Li-and-Li-2-using-Variational-Quantum-EIgensolver|1.0|NO LICENSE
quantum|learning quantum computing|Dpbm|3|3|Jupyter Notebook|https://github.com/Dpbm/quantum|1.0|MIT License
Quantum-Simulation-of-the-ground-state-of-LiH-molecule-using-Variational-Quantum-Eigensolver|This is the code of my work on the quantum simulation of the ground state of Lithium Hydride (LiH) molecule using QISKIT, PySCF. The algorithm used in the simulation is Variational Quantum Eigensolver (VQE).|Bikramaditya0154|0|0|Jupyter Notebook|https://github.com/Bikramaditya0154/Quantum-Simulation-of-the-ground-state-of-LiH-molecule-using-Variational-Quantum-Eigensolver|1.0|NO LICENSE
4qubitGrover|Implementation of Grover's Algorithm for a Quantum Computer of 4 qubits (markes state 0010). Implemented on qiskit for a simulator (with QASM - quantum assembly language) and a quantum device too (requires IBM Q account)|MariosTsatsos|1|1|Jupyter Notebook|https://github.com/MariosTsatsos/4qubitGrover|1.0|NO LICENSE
Quantum-Simulation-of-the-ground-state-of-Hydrogen-molecule-using-Variational-Quantum-Eigensolver-|This is the code of my work on the quantum simulation of the ground state of the Hydrogen molecule using QISKIT backend. In this work, PySCF package is used for the simulation purposes. The algorithm used here is Variational Quantum Eigensolver (VQE). VQE is basically a Hybrid Quantum-Classical Algorithm.|Bikramaditya0154|1|1|Jupyter Notebook|https://github.com/Bikramaditya0154/Quantum-Simulation-of-the-ground-state-of-Hydrogen-molecule-using-Variational-Quantum-Eigensolver-|1.0|NO LICENSE
Grover-s-Code|Code for Implementation of Grover's Algorithm on Qiskit for 3 Qubits on IBM Quantum Simulator as well as IBM Quantum Computer using a database oracle which will again use 3 Qubits to encode the given classical data|AkshayPatil347|0|0|Jupyter Notebook|https://github.com/AkshayPatil347/Grover-s-Code|1.0|NO LICENSE
quantum-computing-|This repo contains basics of quantum computing (qiskit programming) . It includes only topics given as basic mathematics tool, quantum gates and circuits, visualization of qubit, Superposition and measurement, quantum tomography, quantum teleportation, grover's search algorithm in detail |dishantgupta2004|0|0||https://github.com/dishantgupta2004/quantum-computing-|1.0|NO LICENSE
QGSS-2023-From-Theory-to-Implementations|In the Qiskit Global Summer School 2023 we learn the concepts of quantum abstractions from Theory to Implementations. It will be a 2 week journey to participate in this school and master the concepts like Quantum Informations, Quantum Algorithms Design and Implementations, Quantum Computing Hardwares and Quantum Noise and it's mitigations etc|mathelatics|0|0|Jupyter Notebook|https://github.com/mathelatics/QGSS-2023-From-Theory-to-Implementations|1.0|NO LICENSE
qSHA256|Quantum computing implementation of the SHA-256 hashing algorithm. Utilizing Qiskit, IBM's advanced quantum computing framework, this project aims to translate the complex operations of SHA-256 into quantum circuits, harnessing the potential of quantum mechanics to perform cryptographic hashing.|oracleagent|0|0|Python|https://github.com/oracleagent/qSHA256|1.0|NO LICENSE
QuantumBattleshipGame|In this project, quantum algorithms are used to simulate a two-player strategy-type guessing game performed on ruled grids (paper or board) on which each player's fleet of warships is marked. The locations of the fleets are hidden from the other players. It was done for the Hackathon Qiskit Fall Fest Peru 2022.|sebastianbenitezW|0|0|Python|https://github.com/sebastianbenitezW/QuantumBattleshipGame|1.0|NO LICENSE
uts-quantum-computing|Interactive Showcases of Quantum Tic-Tac-Toe Game and Shor's Algorithm for Integer Factorization, covering various Quantum Computing concepts like Quantum Gates, Superposition & Entanglement, Measurement & Collapse, or Quantum Fourier Transform & Phase Estimation, etc.|18520339|0|0|Jupyter Notebook|https://github.com/18520339/uts-quantum-computing|1.0|NO LICENSE
BNL_2020_Summer_Internship|Used quantum computing to simulate dark energy models and explore features such as stability and tunneling in the potential. Results were determined via the use of Mathematica and IBM's quantum algorithm, the Variational Quantum Eigensolver (VQE), available within their Python SDK Qiskit.|Juan-Varela11|0|0|Jupyter Notebook|https://github.com/Juan-Varela11/BNL_2020_Summer_Internship|1.0|NO LICENSE
Session-2|Two-qubit version of the Deutsch algorithm - implement a QASM version - implement on the IBM machine - compare both implementations and comment Two-qubit version of the Grover algorithm - implement a QASM version coding the oracle yourself - implement on the IBM machine coding the oracle yourself - compare both implementations and comment Arbitrary number of qubits version of the Grover algorithm - implement a QASM version using the ‚Äúqiskit_textbook‚Äù library - implement on the IBM machine using the ‚Äúqiskit_textbook‚Äù library - compare both implementations and comment - vary the number of qubits and comment - vary the number of iterations and comment Summarize all your results in a single, commented Jupyter notebook|Quantum-Simulation-Group-2|0|0|Jupyter Notebook|https://github.com/Quantum-Simulation-Group-2/Session-2|1.0|NO LICENSE
Quantum-Computing-Awesome-List|This Repo is an Awesome List for Quantum Computing Enthusiast. This contains blogs and materials to know about applied quantum computing. This repo also contains the main algorithm written in the most common Quantum Computing platforms like QISKIT by IBM and CIRQ by Google.|hephaex|1|1||https://github.com/hephaex/Quantum-Computing-Awesome-List|1.0|NO LICENSE
Grover-Search-Algorithm|This repository includes the implementation of the Grover's search algorithm for n qubits with M winning elements written in Qiskit. It uses the knowledge of matrices devised for the  phase oracle and the diffuser and outputs the probabilities of elements in the form of a histogram. |RakhshandaMujib|1|1|Jupyter Notebook|https://github.com/RakhshandaMujib/Grover-Search-Algorithm|1.0|NO LICENSE
qosf_task1|My quantum algorithm for the solution to task 1 of QOSF cohort 4 screening tests. The code is written using QISKIT. The task was to design a quantum circuit that considers as input a vector of integers and returns a quantum state which is a superposition of indices of the target solution. The target solution consists of those integers whose binary representation's adjacent bits have different values.|gaurav-iiser|0|0|Jupyter Notebook|https://github.com/gaurav-iiser/qosf_task1|1.0|NO LICENSE
Introduction-of-Quantum-walk-its-application-on-search-and-decision-making|Recommendation systems, or recommender systems, are systems that make suggestions related to search history or ratings of n products by a group of m users, in order to provide personalized recommendations to individual users. In short, while search engines help users find what they want, recommendation systems help users find more of what they like or relevant alternatives. search and decision-making processes are crucial for such systems. Quantum computing has the potential to demonstrate that for some problems quantum computation is more efficient than classical computation. Based on that, we are preparing an educational content about the quantum walk model and its application on various types of problems especially in search algorithm and decision-making, and then we try to do a simple qiskit implementation of the model on 1D and 2D graphs for developing an efficient quantum model for such systems on future.|Spintronic6889|0|0|Jupyter Notebook|https://github.com/Spintronic6889/Introduction-of-Quantum-walk-its-application-on-search-and-decision-making|1.0|Apache License 2.0
