"# Prompt:


""""""
Import the QuantumCircuit class from the qiskit library.
Then, create a quantum circuit with 3 qubits. 
Ensure to include the necessary import statement for the qiskit library.
""""""


# Context:
""""""Document 0:::
from qiskit import QuantumCircuit
circuit = QuantumCircuit(5)
circuit.append(gate, [0, 1, 4, 2, 3])
circuit.draw('mpl')
```

![../\_images/circuit\_library-1.png](/images/api/qiskit/1.0/circuit_library-1.png)

The library is organized in several sections.

## Standard gatesDocument 1:::
```python
  from qiskit import QuantumCircuit

  qc = QuantumCircuit(2, 2)
  qc.h(0)
  qc.cx(0, 1)
  qc.measure([0, 1], [0, 1])
  qc.draw('mpl')
  ```

  ![../\_images/qiskit-circuit-QuantumCircuit-1.png](/images/api/qiskit/1.0/qiskit-circuit-QuantumCircuit-1.png)

  Construct a 5-qubit GHZ circuit.

  ```python
  from qiskit import QuantumCircuit

  qc = QuantumCircuit(5)
  qc.h(0)
  qc.cx(0, range(1, 5))Document 2:::
│  State Preparation(0,1) │
    q_1: ┤1                        ├
         └─────────────────────────┘
    ```

    Initialize two qubits from an array of complex amplitudes .. code-block:

    ```python
    import numpy as np
    from qiskit import QuantumCircuit

    circuit = QuantumCircuit(2)
    circuit.prepare_state([0, 1/np.sqrt(2), -1.j/np.sqrt(2), 0], circuit.qubits)
    circuit.draw()
    ```

    output:

    ```python
         ┌───────────────────────────────────────────┐
    q_0: ┤0                                          ├
         │  State Preparation(0,0.70711,-0.70711j,0) │
    q_1: ┤1                                          ├
         └───────────────────────────────────────────┘""""""
# Generate Code here:
"
