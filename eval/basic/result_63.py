from qiskit import QuantumCircuit
from qiskit_aer import AerSimulator
from qiskit_ibm_runtime import Sampler
from numpy.random import randint
def bb84_circuit_generate_key(senders_basis: [int], circuit: QuantumCircuit)->str:
    """ Write a function to generate the key from the circuit and the sender's basis generated by the sender using BB84 protocol.
    """
    # TODO: Implement the function
    return ""

def bb84_circuit_generate_key_from_state(senders_basis: [int], circuit: QuantumCircuit)->str:
    """ Write a function to generate the key from the circuit and the sender's basis generated by the sender using BB84 protocol.
    """
    # TODO: Implement the function
    return ""

def bb84_circuit_generate_key_from_state_and_basis(senders_basis: [int], senders_state: [int], circuit: QuantumCircuit)->str:
    """ Write a function to generate the key from the circuit and the sender's basis and state generated by the sender using BB84 protocol.
    """
    # TODO: Implement the function
    return ""

def bb84_circuit_generate_key_from_state_and_basis_and_measurement(senders_basis: [int], senders_state: [int], circuit: QuantumCircuit)->str:
    """ Write a function to generate the key from the circuit and the sender's basis, state and measurement generated by the sender using BB84 protocol.
    """
    # TODO: Implement the